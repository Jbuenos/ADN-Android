// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = "1.6.10"
    ext.jacocoVersion = '0.8.4'
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:7.0.4"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jacoco:org.jacoco.core:$jacocoVersion"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id 'com.android.application' version '7.2.1' apply false
    id 'com.android.library' version '7.2.1' apply false
    id 'org.jetbrains.kotlin.android' version '1.6.10' apply false
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

task jacocoTestReport(type: JacocoReport, dependsOn:
        [':moduleName:taskTest', ':otherModuleName:taskTest']) {
    def myModule = project(':app')
    layout.files("$buildDir/tmp/kotlin-classes/debug")
    def dotClassesFiles = layout.files("$buildDir/tmp/kotlin-classes/debug", "$myModule.buildDir/tmp/kotlin-classes/debug")
    def mainSources = layout.files("$project.projectDir/src/main/java", "$myModule.projectDir/src/main/java")
    def executionFilesForInstrumentationTest = fileTree(
            dir: "$buildDir",
            includes: ["outputs/code_coverage/debugAndroidTest/connected/**/coverage.ec"]
    )

    def executionFileForNonInstrumentationInModule = "$buildDir/outputs/unit_test_code_coverage/debugUnitTest/testDebugUnitTest.exec"
    def executionFiles = layout.files(
            executionFilesForInstrumentationTest,
            executionFileForNonInstrumentationInModule
    )

    sourceDirectories.setFrom(files([mainSources]))
    classDirectories.setFrom(files([dotClassesFiles.asFileTree]))
    executionData.setFrom(executionFiles.asFileTree)

    reports {
        xml.enabled true
        html.enabled true
    }

}